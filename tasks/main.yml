---
- include: yum.yml
- include: firewall.yml

- name: Disable live restore
  replace:
    dest: /etc/docker/daemon.json
    regexp: '"live-restore": true'
    replace: '"live-restore": false'
    backup: yes
  notify: restart docker

- meta: flush_handlers  

- block:
    - name: Start the swarm manager [1st manager]
      shell: docker swarm update
  rescue:
    - name: Initializing the swarm manager [1st manager]
      shell: >
        docker swarm init --advertise-addr {{ iputils_ip_external }}
  when: 
    - inventory_hostname in groups['swarm_managers'][0]

- block: 
    - name: Get the manager token command
      shell: >
        docker swarm join-token manager | grep -A2 'docker swarm' 
      register: swarm_manager_command

    - name: Get the worker token command 
      shell: >
        docker swarm join-token worker | grep -A2 'docker swarm' 
      register: swarm_worker_command

    - name: Saving facts
      set_fact:
        swarm_manager_command: '{{ swarm_manager_command.stdout }}'
        swarm_worker_command: '{{ swarm_worker_command.stdout }}'
  when: 
    - inventory_hostname in groups['swarm_managers'][0]

- block:
    - name: Start the swarm manager [other managers]
      shell: >
        docker info 2>/dev/null| grep -i 'swarm: active'
  rescue: 
    - name: Initializing swarm manager [other managers]
      shell: >
        {{ hostvars[groups['swarm_managers'][0]]['swarm_manager_command'] }}
  when:
    - inventory_hostname in groups['swarm_managers'][1:]

- block:
    - name: Start the swarm workers
      shell: >
        docker info 2>/dev/null| grep -i 'swarm: active'
  rescue: 
    - name: Initializing swarm workers
      shell: >
        {{ hostvars[groups['swarm_managers'][0]]['swarm_worker_command'] }}
  when:
    - inventory_hostname in groups['swarm_agents']

